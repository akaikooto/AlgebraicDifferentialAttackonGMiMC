//s1 means set less variables

t:=Realtime();


load "division.txt";
load "GMiMC.txt";
p:=131;
F:=GF(p);
alpha:=1;
v:=4;
SS:=ZeroMatrix(F,2*(p^2),v);
P<z,w>:=PolynomialRing(F,v-2);
f:=[z,w];
ns:=0;
for k1:= 0 to p-1 do
for k2:= 0 to p-1 do
b:=[F!alpha,F!alpha,F!alpha,F!alpha,F!alpha,F!alpha,F!alpha,F!alpha,F!k1,F!k2,z,w];
for i:=1 to 12 do
    if v+i eq 12 then 
        con:=b[1];
    end if;
    for j:=1 to 11 do
        b[j+1]:=b[j+1]+(b[1]+i)^3;
    end for;
    temp:=b[1];
    for j:=1 to 11 do
        b[j]:=b[j+1];
    end for;
    b[12]:=temp; 
end for;
f[1]:=b[1]-con;
for j:=1 to 12 do
    b[j]:=division(b[j],f[1]);
    //b[j]:=b[j]-f[1];
end for;

for i:=1 to 12 do
    if v+i eq 12 then 
        con:=b[1];
    end if;
    for j:=1 to 11 do
        b[j+1]:=b[j+1]+(b[1]+12+i)^3;
    end for;
    temp:=b[1];
    for j:=1 to 11 do
        b[j]:=b[j+1];
    end for;
    b[12]:=temp; 
end for;
f[2]:=b[1]-con;
for j:=1 to 12 do
    b[j]:=division(b[j],f[2]);
end for;

G:=GroebnerBasis(ideal<P|f[1],f[2]>);
    if #G le 2 then
        fz:=Factorization(G[2]);
        n:=1;
        while Degree(fz[n,1]) eq 1 do
            sx:=k1;
            sy:=k2;
            sw:=-Evaluate(fz[n,1],w,0);
            sz:=-Evaluate(Evaluate(G[1],w,sw),z,0);
            ns:=ns+1;
            SS[ns,1]:=sx;
            SS[ns,2]:=sy;
            SS[ns,3]:=sz;
            SS[ns,4]:=sw;
            n:=n+1;
        end while;
    end if;


end for;
end for;

S:=ZeroMatrix(F,ns,v);
DS:=ZeroMatrix(F,ns,12);
for i:= 1 to ns do
    for j := 1 to v do
        S[i,j]:=SS[i,j];
    end for;
end for;

b1:=[F!alpha,F!alpha,F!alpha,F!alpha,F!alpha,F!alpha,F!alpha,F!alpha,F!0,F!0,F!0,F!0];
c:=0;
for i := 1 to ns do 
    for k := 1 to 4 do
        b1[8+k]:=F!S[i,k];
    end for;
    v:=gmimc(b1,1,72);
    for k:= 1 to 12 do
        DS[i,k]:=v[k];
    end for;
end for;
v1:=[F!0,F!0,F!0,F!0,F!0,F!0,F!0,F!0,F!0,F!0,F!0,F!0];
v2:=[F!0,F!0,F!0,F!0,F!0,F!0,F!0,F!0,F!0,F!0,F!0,F!0];
for i:= 1 to ns-1 do
    for j := i+1 to ns do
        if (DS[i,1] eq DS[j,1]) and (DS[i,2] eq DS[j,2]) and (DS[i,3] eq DS[j,3]) and (DS[i,4] eq DS[j,4]) and (DS[i,5] eq DS[j,5]) then
            for k := 1 to 12 do
                v1[k]:=DS[i,k];
                v2[k]:=DS[j,k];
            end for;
            i,v1;
            j,v2;
            c:=c+1;
        end if;
    end for;
end for;

Realtime(t);